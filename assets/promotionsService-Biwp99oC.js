import{h as k,u as E,j as P,k as S,c as R,o as M,a as t,b as r,d,t as C,l as g,n as w,C as x,D as f,E as b,G as B,z as h,H as p,x as v,I as _,J as i,K as D,L,M as q}from"./index-DQxOvujX.js";import{F as u}from"./index.es-DyG2QcrM.js";const F={class:"dashboard-layout"},$={class:"header"},z={class:"container"},I={class:"header-content"},N={class:"header-brand"},O={class:"header-logo"},Q={class:"header-actions"},V={class:"user-info"},j={class:"user-email"},G={class:"nav"},H={class:"container"},J={class:"nav-links"},K={class:"main-content"},W={__name:"DashboardLayout",setup(s){const o=k(),a=E(),l=P(()=>a.user),n=async()=>{try{await a.logout(),o.push("/login")}catch(c){console.error("Logout error:",c)}};return(c,e)=>{const y=S("router-link");return M(),R("div",F,[t("header",$,[t("div",z,[t("div",I,[t("div",N,[t("div",O,[r(d(u),{icon:"fa-solid fa-cube",class:"logo-icon"})]),e[0]||(e[0]=t("h1",{class:"header-title"},"EcoFresh Admin",-1))]),t("div",Q,[t("div",V,[t("span",j,C(l.value?.email),1)]),t("button",{onClick:n,class:"logout-btn"},[r(d(u),{icon:"fa-solid fa-sign-out-alt",class:"btn-icon"}),e[1]||(e[1]=t("span",{class:"btn-text"},"Sign out",-1))])])])])]),t("nav",G,[t("div",H,[t("div",J,[r(y,{to:"/dashboard",class:w(["nav-link",{active:c.$route.path==="/dashboard"}])},{default:g(()=>[r(d(u),{icon:"fa-solid fa-tachometer-alt",class:"nav-icon"}),e[2]||(e[2]=t("span",{class:"nav-text"},"Dashboard",-1))]),_:1},8,["class"]),r(y,{to:"/promotions",class:w(["nav-link",{active:c.$route.path==="/promotions"}])},{default:g(()=>[r(d(u),{icon:"fa-solid fa-chart-line",class:"nav-icon"}),e[3]||(e[3]=t("span",{class:"nav-text"},"Promotions",-1))]),_:1},8,["class"])])])]),t("main",K,[x(c.$slots,"default")])])}}},m=B(h,"promotions"),X=f(m,b("createdAt","desc"));f(m,p("active","==",!0),b("createdAt","desc"));const Y=async s=>{try{return s.showModal&&await A(),(await L(m,{...s,createdAt:i(),updatedAt:i(),active:s.active!==void 0?s.active:!0})).id}catch(o){throw console.error("Error creating promotion:",o),o}},Z=async(s,o)=>{try{o.showModal&&await A(s);const a=v(h,"promotions",s);return await _(a,{...o,updatedAt:i()}),!0}catch(a){throw console.error("Error updating promotion:",a),a}},oo=async s=>{try{const o=v(h,"promotions",s);return await D(o),!0}catch(o){throw console.error("Error deleting promotion:",o),o}},to=async(s,o)=>{try{const a=v(h,"promotions",s);return await _(a,{active:!o,updatedAt:i()}),!0}catch(a){throw console.error("Error toggling promotion status:",a),a}},A=async(s=null)=>{try{const o=f(m,p("active","==",!0),p("showModal","==",!0)),l=(await q(o)).docs.filter(n=>n.id!==s).map(n=>_(n.ref,{showModal:!1,updatedAt:i()}));l.length>0&&await Promise.all(l)}catch(o){throw console.error("Error ensuring only one modal promotion:",o),o}};export{W as _,X as a,Y as c,oo as d,to as t,Z as u};
